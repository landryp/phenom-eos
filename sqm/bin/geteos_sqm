#!/usr/bin/python
__doc__ = 'GETEOS_SQM -- save EoS data for strange quark matter EoS specified by its bag-model parameters'
__usage__ = 'geteos_sqm'
__author__ = 'philippe.landry@ligo.org'
__date__ = '02-2019'

import numpy as np
from optparse import OptionParser
from get_sqm import sqm

parser = OptionParser(usage=__usage__, description=__doc__)
parser.add_option('-n', '--num', default=100, help='number of EoS data pts to return, DEFAULT=100', metavar='num')
parser.add_option('-o', '--outpath', default='./sqm/dat/', help='path to output data, DEFAULT="./sqm/dat/"', metavar='outpath')
parser.add_option('-i', '--inpath', default='./sqm/in/', help='path to input parameters, DEFAULT="./sqm/in/"', metavar='inpath')
parser.add_option('-f', '--paramsfile', default='sqmparams.in', help='name of SQM parameters input file OR comma-separated input parameters (e.g. 2500.,0.66), DEFAULT="sqmparams.in"', metavar='paramsfile')
parser.add_option('-p', '--pmax', default=1e17, help='maximum pressure to return [g/cm^3], DEFAULT=1e17', metavar='pmax')
parser.add_option('-t', '--tag', default='', help='tag for output data file, DEFAULT=""', metavar='tag')

opts, args = parser.parse_args()
outpath = str(opts.outpath)
inpath = str(opts.inpath)
paramsfile = str(opts.paramsfile)
tag = str(opts.tag)
num = float(opts.num)
pmax = float(opts.pmax)

outfile1 = open(outpath+"eos/"+"sqm_"+tag+".csv","w")
outfile2 = open(outpath+"params/"+"params_"+tag+".csv","w")

params = paramsfile.split(',')

if len(params)>1: # read parameters if entered manually

	B = float(params[0])
	cqm2 = float(params[1])

else: # otherwise, read parameters from file

	sqmparams = np.genfromtxt(inpath+paramsfile,delimiter=',',names=True)

	B, cqm2 = [sqmparams['B'],sqmparams['cqm2']]

rhodat, mudat, pdat = sqm(B, cqm2, num, pmax)

outfile1.write('logpressurec2,pressurec2,energy_densityc2,baryon_density \n')
outfile2.write('B,cqm2 \n')
outfile2.write('{0},{1} \n'.format(B,cqm2))

for i in range(len(rhodat)):

	p = pdat[i]
	logp = np.log(p)
	mu = mudat[i]
	rho = rhodat[i]

	outfile1.write('{0},{1},{2},{3} \n'.format(logp,p,mu,rho))
