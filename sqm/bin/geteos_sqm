#!/usr/bin/python
__doc__ = 'GETEOS_SQM -- save EoS data for strange quark matter EoS specified by its bag-model parameters'
__usage__ = 'geteos_sqm'
__author__ = 'philippe.landry@ligo.org'
__date__ = '02-2019'

import numpy as np
from optparse import OptionParser
from get_sqm import sqm

parser = OptionParser(usage=__usage__, description=__doc__)
parser.add_option('-p', '--params', default='sqmparams.in', help='name of sqm parameters input file OR comma-separated input parameters [B (MeV/fm^3), cqm2 (c^2)], DEFAULT=sqmparams.in', metavar='186.,0.66')
parser.add_option('-n', '--numpts', default=100, help='number of EoS data points to return, DEFAULT=100', metavar='100')
parser.add_option('-m', '--pmax', default=1e17, help='maximum pressure to return [g/cm^3], DEFAULT=1e17', metavar='1e17')
parser.add_option('-i', '--indir', default='./sqm/in/', help='path to directory housing input parameters file, DEFAULT=./sqm/in/', metavar='./sqm/in/')
parser.add_option('-o', '--outdir', default='./sqm/dat/', help='path to output directory, DEFAULT=./sqm/dat/', metavar='./sqm/dat/')
parser.add_option('-t', '--tag', default='', help='tag for output data file, DEFAULT=""', metavar='""')

opts, args = parser.parse_args()
params = str(opts.params).split(',')
numpts = float(opts.numpts)
pmax = float(opts.pmax)
indir = str(opts.indir)
outdir = str(opts.outdir)
tag = str(opts.tag)

outfile1 = open(outdir+"eos/"+"sqm_"+tag+".csv","w")
outfile2 = open(outdir+"params/"+"params_"+tag+".csv","w")

# LOAD EOS PARAMETERS

if len(params)>1: # read parameters if entered manually

	B = float(params[0])
	cqm2 = float(params[1])

else: # otherwise, read parameters from file

	sqmparams = np.genfromtxt(indir+params[0],delimiter=',',names=True)

	B, cqm2 = [sqmparams['B'],sqmparams['cqm2']]
	
# CONSTRUCT STRANGE QUARK MATTER EOS

rhodat, mudat, pdat = sqm(B, cqm2, numpts, pmax)

# PRINT EOS DATA

outfile1.write('logpressurec2,pressurec2,energy_densityc2,baryon_density \n')
outfile2.write('B,cqm2 \n')
outfile2.write('{0},{1} \n'.format(B,cqm2)) # record params used

for i in range(len(rhodat)): # print table of EoS data

	p = pdat[i]
	logp = np.log(p)
	mu = mudat[i]
	rho = rhodat[i]

	outfile1.write('{0},{1},{2},{3} \n'.format(logp,p,mu,rho))
