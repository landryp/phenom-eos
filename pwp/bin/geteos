#!/usr/bin/python
__doc__ = 'GETEOS -- save EoS data for specified piecewise polytrope'
__usage__ = 'geteos'
__author__ = 'philippe.landry@ligo.org'
__date__ = '10-2018'

import numpy as np
from optparse import OptionParser
from get_pwp import pwpoly

parser = OptionParser(usage=__usage__, description=__doc__)
parser.add_option('-n', '--num', default=100, help='number of EoS data pts to return, DEFAULT=100', metavar='num')
parser.add_option('-o', '--outpath', default='./dat/', help='path to output data, DEFAULT="../dat/"', metavar='outpath')
parser.add_option('-i', '--inpath', default='./in/', help='path to input parameters, DEFAULT="../in/"', metavar='inpath')
parser.add_option('-p', '--paramsfile', default='pwpparams.in', help='name of piecewise polytrope parameters input file, DEFAULT="pwpparams.in"', metavar='paramsfile')
parser.add_option('-r', '--rhomax', default=1e1, help='maximum density to return (in units of nuclear density), DEFAULT=10', metavar='rhomax')
parser.add_option('-t', '--tag', default='', help='tag for output data file, DEFAULT=""', metavar='tag')

opts, args = parser.parse_args()
outpath = str(opts.outpath)
inpath = str(opts.inpath)
paramsfile = str(opts.paramsfile)
tag = str(opts.tag)
num = float(opts.num)
rhomax = float(opts.rhomax)

outfile1 = open(outpath+"eos/"+"pwp_"+tag+".csv","w")
outfile2 = open(outpath+"params/"+"params_"+tag+".csv","w")

pwpparams = np.genfromtxt(inpath+paramsfile,delimiter=',',names=True)
	
logp1, G1, G2, G3 = [pwpparams['log10p1'],pwpparams['Gamma1'],pwpparams['Gamma2'],pwpparams['Gamma3']]
rhodat, mudat, pdat = pwpoly(logp1, G1, G2, G3, num, rhomax)

outfile1.write('logpressurec2,pressurec2,energy_densityc2,baryon_density \n')
outfile2.write('log10p1,Gamma1,Gamma2,Gamma3 \n')
outfile2.write('{0},{1},{2},{3} \n'.format(logp1,G1,G2,G3))

for i in range(len(rhodat)):

	p = pdat[i]
	logp = np.log(p)
	mu = mudat[i]
	rho = rhodat[i]

	outfile1.write('{0},{1},{2},{3} \n'.format(logp,p,mu,rho))
