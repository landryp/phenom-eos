#!/usr/bin/python
__doc__ = 'PLOTEOS -- produce diagnostic plot of EoS data'
__usage__ = 'ploteos EoS'
__author__ = 'philippe.landry@ligo.org'
__date__ = '09-2018'

import numpy as np
from optparse import OptionParser
from geteos import geteos
from crust import crust

parser = OptionParser(usage=__usage__, description=__doc__)
parser.add_option('-p', '--eospath', default='../in/eos/', help='path to EoS data, DEFAULT="../eos/"', metavar='eospath')
parser.add_option('-o', '--outpath', default='./plt/', help='path to output data, DEFAULT="./plt/"', metavar='outpath')
parser.add_option('-x', '--extension', default='csv', help='file extension for EoS data, DEFAULT="csv"', metavar='extension')

opts, args = parser.parse_args()
eospath = str(opts.eospath)
outpath = str(opts.outpath)
extension = '.'+str(opts.extension)
eosname = str(args[0])

rhonuc = 2.7e14

eosloc = eospath+eosname+extension

eos = geteos(eosloc)
eosdatx = eos[:,0]/rhonuc # rho in units of rhonuc
eosdaty = eos[:,1]/rhonuc # p in units of rhonuc
eosdaty2 = eos[:,2]/rhonuc # mu in units of rhonuc

[rhodat,mudat,pdat] = crust(eos,pts=1e3,diagnostic=True) # in units of rhonuc
dpdmudat = np.gradient(pdat)/np.gradient(mudat)

import matplotlib
matplotlib.use('Agg')
import matplotlib.pyplot as plt

plt.figure(1,figsize=(10.,10.))
plt.loglog(rhodat,mudat,lw=2,label=r'$\mu \, [\rho_{\mathrm{nuc}}]$')
plt.loglog(rhodat,pdat,lw=2,label=r'$p \, [\rho_{\mathrm{nuc}}]$')
plt.loglog(rhodat,dpdmudat,lw=2,label=r'$dp/d\mu$')
plt.loglog(eosdatx,eosdaty2,marker='.',lw=0,label=r'$\mu \, [\rho_{\mathrm{nuc}}]$')
plt.loglog(eosdatx,eosdaty,marker='.',lw=0,label=r'$p \, [\rho_{\mathrm{nuc}}]$')
plt.xlabel(r'$\rho \, [\rho_{\mathrm{nuc}}]$', fontsize = 28)
plt.legend(loc=0)

plt.savefig(outpath+'eos_diagnostic.png')

